pipeline {
	agent any

	stage('compile'){
		steps {
		sh './mvnw clean compile -e'
		}
	}
	stage('test'){
		steps {
		sh './mvnw clean test -e'
		}
	}
	stage('jar'){
                steps {
                sh './mvnw clean package -e'
                }
        }
	stage('sonar'){
                steps {
			script {
                	withSonarQubeEnv('Sonar'){
			tool name: 'sonarqube', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
			def sonar = "${JENKINS_HOME}/tools/hudson.plugins.sonar.SonarRunnerInstallation/sonarqube/bin/sonar-scanner"
			sh "${sonar} -Dsonar.projectKey=${env.JOB_BASE_NAME}-${env.BRANCH_NAME} -Dsonar.java.binaries=build"
		}
	sleep 30
	timeout(time: 5, unit: 'MINUTES'){
        	def qg = waitForQualityGate(){
		if (qg.status != 'OK'){
			error "Pipeline fallido debido a Quality Gate erroneo: ${qg.status}"
		}
		}
		}
		}
        }
	
